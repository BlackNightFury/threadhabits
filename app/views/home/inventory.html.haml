- content_for :javascript do
  Listings.infiniteScroll();
  Mobile.filtersTweaks();

.container
  .filter-board.visible-xs
    - if mobile_device?
      .filter-board.visible-xs
        = button_tag class: "btn btn-sm btn-default btn-block", id: "toggle-filter-menu" do
          %i.fa.fa-filter
          Filters
    - else
      .filter-board.visible-xs
        = button_tag class: "btn btn-sm btn-default btn-block", id: "toggle-filter-menu-desktop" do
          %i.fa.fa-filter
          Filters
  / %div{style: @banner == true && !mobile_device? ? "margin-top: -75px;" : ""}
  %div.row
    - unless mobile_device?
      - if params[:filters].blank?
        .col-md-3.col-sm-3.col-xs-12.filters
          = render partial: "filters"
      -else
        .col-md-3.col-sm-3.col-xs-12.filters.padding-top-75
          = render partial: "filters"
    - if params[:filters].blank?
      .col-md-9.col-sm-9.col-xs-12#outer_listings
        - if @listings.present?
          .listings#public-listings
            .row
              .listing-item
                = render partial: "listings/listing", collection: @listings

          #infinite-scrolling.items-pagination
            = will_paginate @listings, renderer: BootstrapPagination::Rails
        - else
          .alert.alert-success
            There are no listings
    - else
      .col-md-9.col-sm-9.col-xs-12.padding-top-75#outer_listings
        - if @listings.present?
          .listings#public-listings
            .row
              .listing-item
                = render partial: "listings/listing", collection: @listings

          #infinite-scrolling.items-pagination
            = will_paginate @listings, renderer: BootstrapPagination::Rails
        - else
          .alert.alert-success
            There are no listings

- content_for :collapsed_menus do
  -# Filters Menu
  #filter-menu
    .menu-collapse
      %div.dismiss-times
      %h3
        = link_to "Filters", inventory_path
      - if mobile_device?
        = render layout: "filters" do
          %ul.list-unstyled.sub-categories
            - @p[:filters].delete("product_type")
            %li
              %a{:href => inventory_path(@p.merge!(filters: { product_type: "tops" }))} Tops
            %li
              %a{:href => inventory_path(@p.merge!(filters: { product_type: "outerwear" }))} Outerwear
            %li
              %a{:href => inventory_path(@p.merge!(filters: { product_type: "bottoms" }))} Bottoms
            %li
              %a{:href => inventory_path(@p.merge!(filters: { product_type: "shoes" }))} Shoes
            %li
              %a{:href => inventory_path(@p.merge!(filters: { product_type: "accessories" }))} Accessories

